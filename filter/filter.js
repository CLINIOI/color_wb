// =========================
// –¢–µ–º–∞ (—Å–≤–µ—Ç–ª–∞—è/—Ç—ë–º–Ω–∞—è)
// =========================

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Ç–µ–º—É –≤ localStorage
document.addEventListener("DOMContentLoaded", () => {
  const themeToggle = document.getElementById("themeToggle");

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  const savedTheme = localStorage.getItem("theme") || "light";
  if (savedTheme === "dark") {
    document.body.classList.add("dark-theme");
    themeToggle.textContent = "‚òÄÔ∏è";
  } else {
    document.body.classList.remove("dark-theme");
    themeToggle.textContent = "üåô";
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
  themeToggle.addEventListener("click", () => {
    if (document.body.classList.contains("dark-theme")) {
      document.body.classList.remove("dark-theme");
      localStorage.setItem("theme", "light");
      themeToggle.textContent = "üåô";
    } else {
      document.body.classList.add("dark-theme");
      localStorage.setItem("theme", "dark");
      themeToggle.textContent = "‚òÄÔ∏è";
    }
  });
});

// =========================
// –§–∏–ª—å—Ç—Ä—ã
// =========================

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–∞–π–¥–µ—Ä–æ–≤
const grayscaleRange = document.getElementById("grayscaleRange");
const sepiaRange = document.getElementById("sepiaRange");
const blurRange = document.getElementById("blurRange");
const brightnessRange = document.getElementById("brightnessRange");
const hueRange = document.getElementById("hueRange");
const saturateRange = document.getElementById("saturateRange");
const contrastRange = document.getElementById("contrastRange");
const invertRange = document.getElementById("invertRange");

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
const grayscaleValue = document.getElementById("grayscaleValue");
const sepiaValue = document.getElementById("sepiaValue");
const blurValue = document.getElementById("blurValue");
const brightnessValue = document.getElementById("brightnessValue");
const hueValue = document.getElementById("hueValue");
const saturateValue = document.getElementById("saturateValue");
const contrastValue = document.getElementById("contrastValue");
const invertValue = document.getElementById("invertValue");

// –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–æ—Ä–∏–≥–∏–Ω–∞–ª –∏ –ø—Ä–µ–≤—å—é)
const originalImage = document.getElementById("originalImage");
const previewImage = document.getElementById("previewImage");

// –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å –∏—Ç–æ–≥–æ–≤—ã–º CSS
const filterCSSTextarea = document.getElementById("filterCSS");
const faqBtn = document.getElementById("faqBtn");

// FAQ: –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Bootstrap)
faqBtn.addEventListener("click", () => {
  $("#faqModal").modal("show");
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
function updateFilters() {
  const grayscale = grayscaleRange.value;
  const sepia = sepiaRange.value;
  const blur = blurRange.value;
  const brightness = brightnessRange.value;
  const hue = hueRange.value;
  const saturate = saturateRange.value;
  const contrast = contrastRange.value;
  const invert = invertRange.value;

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Ä—è–¥–æ–º —Å–æ —Å–ª–∞–π–¥–µ—Ä–∞–º–∏
  grayscaleValue.textContent = grayscale + "%";
  sepiaValue.textContent = sepia + "%";
  blurValue.textContent = blur + "px";
  brightnessValue.textContent = brightness + "%";
  hueValue.textContent = hue + "deg";
  saturateValue.textContent = saturate + "%";
  contrastValue.textContent = contrast + "%";
  invertValue.textContent = invert + "%";

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Ñ–∏–ª—å—Ç—Ä–∞
  const filterString = `
    grayscale(${grayscale}%)
    sepia(${sepia}%)
    blur(${blur}px)
    brightness(${brightness}%)
    hue-rotate(${hue}deg)
    saturate(${saturate}%)
    contrast(${contrast}%)
    invert(${invert}%)
  `
    .replace(/\s+/g, " ")
    .trim();

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  previewImage.style.filter = filterString;

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π CSS –≤ <textarea>
  filterCSSTextarea.value = `filter: ${filterString};`;
}

// –ù–∞–≤–µ—à–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –Ω–∞ –≤—Å–µ —Å–ª–∞–π–¥–µ—Ä—ã
[
  grayscaleRange,
  sepiaRange,
  blurRange,
  brightnessRange,
  hueRange,
  saturateRange,
  contrastRange,
  invertRange,
].forEach((range) => {
  range.addEventListener("input", updateFilters);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
updateFilters();

// =========================
// –ü—Ä–µ—Å–µ—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤ (—Å–ª–æ–≤–∞—Ä—å)
// =========================
const presets = {
  –°—Ç–∞–Ω–¥–∞—Ä—Ç: {
    grayscale: 0,
    sepia: 0,
    blur: 0,
    brightness: 100,
    hue: 0,
    saturate: 100,
    contrast: 100,
    invert: 0,
  },
  –°–µ–ø–∏—è: {
    grayscale: 0,
    sepia: 100,
    blur: 0,
    brightness: 100,
    hue: 0,
    saturate: 100,
    contrast: 100,
    invert: 0,
  },
  "–ß–µ—Ä–Ω–æ-–±–µ–ª—ã–π": {
    grayscale: 100,
    sepia: 0,
    blur: 0,
    brightness: 100,
    hue: 0,
    saturate: 100,
    contrast: 100,
    invert: 0,
  },
  –Ø—Ä–∫–∏–π: {
    grayscale: 0,
    sepia: 0,
    blur: 0,
    brightness: 150,
    hue: 0,
    saturate: 100,
    contrast: 120,
    invert: 0,
  },
  –ú—è–≥–∫–∏–π: {
    grayscale: 0,
    sepia: 0,
    blur: 2,
    brightness: 120,
    hue: 0,
    saturate: 100,
    contrast: 90,
    invert: 0,
  },
  –ù–æ—á–Ω–æ–π: {
    grayscale: 50,
    sepia: 20,
    blur: 1,
    brightness: 80,
    hue: 180,
    saturate: 150,
    contrast: 110,
    invert: 0,
  },
  –•–æ–ª–æ–¥–Ω—ã–π: {
    grayscale: 0,
    sepia: 0,
    blur: 0,
    brightness: 100,
    hue: 240,
    saturate: 80,
    contrast: 90,
    invert: 0,
  },
  –¢—ë–ø–ª—ã–π: {
    grayscale: 0,
    sepia: 30,
    blur: 0,
    brightness: 110,
    hue: 30,
    saturate: 120,
    contrast: 105,
    invert: 0,
  },
  –†–µ—Ç—Ä–æ: {
    grayscale: 20,
    sepia: 50,
    blur: 0,
    brightness: 90,
    hue: 0,
    saturate: 110,
    contrast: 100,
    invert: 0,
  },
  –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ: {
    grayscale: 0,
    sepia: 20,
    blur: 0,
    brightness: 100,
    hue: 15,
    saturate: 130,
    contrast: 115,
    invert: 0,
  },
  "–°–≤–µ—Ç–ª–∞—è –¥—ã–º–∫–∞": {
    grayscale: 10,
    sepia: 10,
    blur: 5,
    brightness: 120,
    hue: 0,
    saturate: 80,
    contrast: 95,
    invert: 0,
  },
  –ú–æ–Ω–æ—Ö—Ä–æ–º: {
    grayscale: 100,
    sepia: 0,
    blur: 0,
    brightness: 100,
    hue: 0,
    saturate: 100,
    contrast: 100,
    invert: 0,
  },
  –ì–ª—è–Ω—Ü–µ–≤—ã–π: {
    grayscale: 0,
    sepia: 0,
    blur: 0,
    brightness: 130,
    hue: 0,
    saturate: 150,
    contrast: 120,
    invert: 0,
  },
  –í–∏–Ω—Ç–∞–∂: {
    grayscale: 20,
    sepia: 70,
    blur: 1,
    brightness: 85,
    hue: 0,
    saturate: 90,
    contrast: 95,
    invert: 0,
  },
  –ü–∞—Å—Ç–µ–ª—å: {
    grayscale: 0,
    sepia: 20,
    blur: 0,
    brightness: 110,
    hue: 0,
    saturate: 70,
    contrast: 90,
    invert: 0,
  },
  –°—É—Ä–æ–≤—ã–π: {
    grayscale: 0,
    sepia: 0,
    blur: 0,
    brightness: 90,
    hue: 0,
    saturate: 100,
    contrast: 130,
    invert: 0,
  },
  "–≠—Ñ—Ñ–µ–∫—Ç –∫–∏–Ω–æ": {
    grayscale: 0,
    sepia: 20,
    blur: 0,
    brightness: 105,
    hue: 0,
    saturate: 125,
    contrast: 115,
    invert: 0,
  },
  –°–∏—è–Ω–∏–µ: {
    grayscale: 0,
    sepia: 0,
    blur: 0,
    brightness: 140,
    hue: 0,
    saturate: 140,
    contrast: 110,
    invert: 0,
  },
  –¢—É–º–∞–Ω: {
    grayscale: 0,
    sepia: 0,
    blur: 10,
    brightness: 80,
    hue: 0,
    saturate: 100,
    contrast: 100,
    invert: 0,
  },
  –ê–∫–≤–∞—Ä–µ–ª—å: {
    grayscale: 20,
    sepia: 10,
    blur: 2,
    brightness: 105,
    hue: 0,
    saturate: 150,
    contrast: 85,
    invert: 0,
  },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ—Å–µ—Ç–∞
function applyPreset(presetName) {
  const preset = presets[presetName];
  if (!preset) return;

  grayscaleRange.value = preset.grayscale;
  sepiaRange.value = preset.sepia;
  blurRange.value = preset.blur;
  brightnessRange.value = preset.brightness;
  hueRange.value = preset.hue;
  saturateRange.value = preset.saturate;
  contrastRange.value = preset.contrast;
  invertRange.value = preset.invert;

  updateFilters();
}

// =========================
// –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
// =========================

// –ö–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é"
const uploadPhotoButton = document.getElementById("uploadPhoto");
uploadPhotoButton.addEventListener("click", () => {
  const fileInput = document.createElement("input");
  fileInput.type = "file";
  fileInput.accept = "image/*";
  fileInput.addEventListener("change", (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function (event) {
        originalImage.src = event.target.result;
        previewImage.src = event.target.result;
      };
      reader.readAsDataURL(file);
    }
  });
  fileInput.click();
});

// –ö–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é" (–ø—Ä–∏–º–µ—Ä)
const savePhotoButton = document.getElementById("savePhoto");
savePhotoButton.addEventListener("click", () => {
  alert(
    "–ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è."
  );
});

// –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –≤ –±—É—Ñ–µ—Ä CSS"
const copyCSSButton = document.getElementById("copyCSS");
copyCSSButton.addEventListener("click", () => {
  navigator.clipboard
    .writeText(filterCSSTextarea.value)
    .then(() => alert("CSS-–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!"))
    .catch((err) => console.error("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:", err));
});
